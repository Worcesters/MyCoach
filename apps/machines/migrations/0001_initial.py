# Generated by Django 4.2.7 on 2025-07-09 15:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: Cardio, Force, Isolation, Compound...', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nom du label')),
                ('color', models.CharField(default='#007bff', help_text="Couleur hexadécimale pour l'affichage (ex: #007bff)", max_length=7, verbose_name='Couleur')),
                ('description', models.CharField(blank=True, help_text='Description courte du label', max_length=200, verbose_name='Description')),
                ('is_primary', models.BooleanField(default=False, help_text='Indique si ce label est un tag principal (affiché en priorité)', verbose_name='Label principal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom complet et descriptif de la machine', max_length=200, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nom de la machine')),
                ('brand', models.CharField(blank=True, help_text='Marque/fabricant de la machine', max_length=100, verbose_name='Marque')),
                ('model', models.CharField(blank=True, help_text='Modèle spécifique de la machine', max_length=100, verbose_name='Modèle')),
                ('machine_type', models.CharField(choices=[('cardio', 'Cardio'), ('strength', 'Musculation'), ('functional', 'Fonctionnel'), ('free_weights', 'Poids libres'), ('bodyweight', 'Poids du corps')], default='strength', max_length=20, verbose_name='Type de machine')),
                ('description', models.TextField(help_text='Description détaillée de la machine et de son utilisation', verbose_name='Description')),
                ('instructions', models.TextField(help_text='Guide détaillé pour utiliser correctement la machine', verbose_name="Instructions d'utilisation")),
                ('safety_notes', models.TextField(blank=True, help_text='Consignes de sécurité importantes', verbose_name='Notes de sécurité')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Avancé'), (4, 'Expert')], default=2, verbose_name='Niveau de difficulté')),
                ('supports_speed', models.BooleanField(default=False, help_text='Machine cardio avec réglage de vitesse', verbose_name='Supporte la vitesse')),
                ('supports_incline', models.BooleanField(default=False, help_text="Machine cardio avec réglage d'inclinaison", verbose_name="Supporte l'inclinaison")),
                ('supports_resistance', models.BooleanField(default=True, help_text='Machine avec réglage de résistance/poids', verbose_name='Supporte la résistance')),
                ('min_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Poids minimum configurable', max_digits=6, null=True, verbose_name='Poids minimum (kg)')),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Poids maximum configurable', max_digits=6, null=True, verbose_name='Poids maximum (kg)')),
                ('weight_increment', models.DecimalField(decimal_places=2, default=2.5, help_text='Plus petit incrément de poids possible', max_digits=4, verbose_name='Incrément de poids (kg)')),
                ('image', models.ImageField(blank=True, help_text='Photo de la machine', null=True, upload_to='machines/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, help_text='Machine disponible pour utilisation', verbose_name='Machine active')),
                ('is_maintenance', models.BooleanField(default=False, help_text='Machine temporairement indisponible', verbose_name='En maintenance')),
                ('gym_location', models.CharField(blank=True, help_text='Zone/emplacement dans la salle de sport', max_length=100, verbose_name='Emplacement salle')),
                ('popularity_score', models.IntegerField(default=0, help_text="Score basé sur l'utilisation (calculé automatiquement)", verbose_name='Score de popularité')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Machine',
                'verbose_name_plural': 'Machines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MuscleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: Pectoraux, Biceps, Quadriceps...', max_length=100, unique=True, verbose_name='Nom du groupe musculaire')),
                ('description', models.TextField(blank=True, help_text='Description détaillée du groupe musculaire', verbose_name='Description')),
                ('anatomical_zone', models.CharField(choices=[('upper_body', 'Haut du corps'), ('lower_body', 'Bas du corps'), ('core', 'Tronc/Core'), ('full_body', 'Corps entier')], default='upper_body', max_length=50, verbose_name='Zone anatomique')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Groupe musculaire',
                'verbose_name_plural': 'Groupes musculaires',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MachineRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Note')),
                ('comment', models.TextField(blank=True, help_text='Commentaire sur la machine', verbose_name='Commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='machines.machine', verbose_name='Machine')),
            ],
            options={
                'verbose_name': 'Évaluation de machine',
                'verbose_name_plural': 'Évaluations de machines',
                'ordering': ['-created_at'],
            },
        ),
    ]
