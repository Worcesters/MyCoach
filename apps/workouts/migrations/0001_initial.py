# Generated by Django 4.2.7 on 2025-07-09 15:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('machines', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Ordre dans la séance')),
                ('target_sets', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Séries cibles')),
                ('target_reps', models.IntegerField(default=12, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Répétitions cibles')),
                ('target_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Poids cible (kg)')),
                ('target_duration_seconds', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(7200)], verbose_name='Durée cible (secondes)')),
                ('target_distance_meters', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(50000)], verbose_name='Distance cible (mètres)')),
                ('rest_seconds', models.IntegerField(default=90, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(600)], verbose_name='Temps de repos (secondes)')),
                ('auto_progression', models.BooleanField(default=True, help_text='Ajuster automatiquement le poids selon les performances', verbose_name='Progression automatique')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('completed', models.BooleanField(default=False, verbose_name='Exercice terminé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='machines.machine', verbose_name='Machine/Équipement')),
            ],
            options={
                'verbose_name': 'Exercice',
                'verbose_name_plural': 'Exercices',
                'ordering': ['workout', 'order'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du template')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, help_text='Visible par tous les utilisateurs', verbose_name='Template public')),
                ('target_duration_minutes', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(180)], verbose_name='Durée cible (minutes)')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Niveau 1'), (2, 'Niveau 2'), (3, 'Niveau 3'), (4, 'Niveau 4'), (5, 'Niveau 5')], default=2, verbose_name='Niveau de difficulté')),
                ('tags', models.CharField(blank=True, help_text='Tags séparés par des virgules', max_length=200, verbose_name='Tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': "Template d'entraînement",
                'verbose_name_plural': "Templates d'entraînements",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du programme')),
                ('description', models.TextField(verbose_name='Description du programme')),
                ('is_public', models.BooleanField(default=False, verbose_name='Programme public')),
                ('duration_weeks', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(52)], verbose_name='Durée en semaines')),
                ('workouts_per_week', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='Séances par semaine')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Niveau 1'), (2, 'Niveau 2'), (3, 'Niveau 3'), (4, 'Niveau 4'), (5, 'Niveau 5')], default=2, verbose_name='Niveau de difficulté')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('templates', models.ManyToManyField(blank=True, to='workouts.workouttemplate', verbose_name='Templates inclus')),
            ],
            options={
                'verbose_name': "Programme d'entraînement",
                'verbose_name_plural': "Programmes d'entraînement",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la séance')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de la séance')),
                ('status', models.CharField(choices=[('planned', 'Planifiée'), ('in_progress', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='planned', max_length=20, verbose_name='Statut')),
                ('planned_duration_minutes', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(300)], verbose_name='Durée planifiée (minutes)')),
                ('actual_duration_minutes', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(300)], verbose_name='Durée réelle (minutes)')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de début')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de fin')),
                ('difficulty_felt', models.IntegerField(blank=True, choices=[(1, '1/5'), (2, '2/5'), (3, '3/5'), (4, '4/5'), (5, '5/5')], null=True, verbose_name='Difficulté ressentie')),
                ('satisfaction', models.IntegerField(blank=True, choices=[(1, '1/5'), (2, '2/5'), (3, '3/5'), (4, '4/5'), (5, '5/5')], null=True, verbose_name='Satisfaction')),
                ('notes', models.TextField(blank=True, verbose_name='Notes personnelles')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.workouttemplate', verbose_name='Template utilisé')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workouts', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Séance d'entraînement",
                'verbose_name_plural': "Séances d'entraînement",
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.PositiveIntegerField(verbose_name='Numéro de série')),
                ('reps', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Répétitions effectuées')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Poids utilisé (kg)')),
                ('duration_seconds', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7200)], verbose_name='Durée (secondes)')),
                ('distance_meters', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50000)], verbose_name='Distance (mètres)')),
                ('speed_kmh', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(50)], verbose_name='Vitesse (km/h)')),
                ('incline_percentage', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Inclinaison (%)')),
                ('completed', models.BooleanField(default=False, verbose_name='Série terminée')),
                ('rpe', models.IntegerField(blank=True, choices=[(1, 'RPE 1'), (2, 'RPE 2'), (3, 'RPE 3'), (4, 'RPE 4'), (5, 'RPE 5'), (6, 'RPE 6'), (7, 'RPE 7'), (8, 'RPE 8'), (9, 'RPE 9'), (10, 'RPE 10')], help_text="Échelle de 1 à 10 de l'effort perçu", null=True, verbose_name='RPE (Rate of Perceived Exertion)')),
                ('rest_seconds_actual', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1800)], verbose_name='Temps de repos réel (secondes)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de fin')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='workouts.exercise', verbose_name='Exercice')),
            ],
            options={
                'verbose_name': 'Série',
                'verbose_name_plural': 'Séries',
                'ordering': ['exercise', 'set_number'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('1rm', '1RM (Une répétition maximum)'), ('volume', 'Volume maximum'), ('endurance', 'Endurance maximum'), ('personal', 'Record personnel')], max_length=20, verbose_name='Type de record')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Poids (kg)')),
                ('reps', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Répétitions')),
                ('duration_seconds', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(86400)], verbose_name='Durée (secondes)')),
                ('distance_meters', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100000)], verbose_name='Distance (mètres)')),
                ('achieved_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date du record')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('is_verified', models.BooleanField(default=True, help_text='Record confirmé et validé', verbose_name='Record vérifié')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='machines.machine', verbose_name='Machine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('workout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.workout', verbose_name='Séance associée')),
            ],
            options={
                'verbose_name': 'Record de performance',
                'verbose_name_plural': 'Records de performance',
                'ordering': ['-achieved_at'],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='workout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='workouts.workout', verbose_name='Séance'),
        ),
        migrations.AddIndex(
            model_name='workout',
            index=models.Index(fields=['user', 'date'], name='workouts_wo_user_id_f1c995_idx'),
        ),
        migrations.AddIndex(
            model_name='workout',
            index=models.Index(fields=['status'], name='workouts_wo_status_66f5ca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='serie',
            unique_together={('exercise', 'set_number')},
        ),
        migrations.AddIndex(
            model_name='performancerecord',
            index=models.Index(fields=['user', 'machine', 'record_type'], name='workouts_pe_user_id_b2e1f1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exercise',
            unique_together={('workout', 'order')},
        ),
    ]
